{"version":3,"file":"static/js/236.9f53d23b.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Container = styled.div`\n  width: 400px;\n  padding: 40px;\n  background: ${({ theme }) => theme.colors.cardBackground};\n  box-sizing: border-box;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin: 0 auto;\n`;\n\nexport const ContainerBox = styled.div`\n  position: relative;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: ${({ theme }) => theme.colors.error};\n  font-size: 14px;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 0 30px;\n  padding: 0;\n  color: ${({ theme }) => theme.colors.primary};\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  width: 92%;\n  padding: 10px;\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.text};\n  border: 2px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 5px;\n  outline: none;\n  background: ${({ theme }) => theme.colors.cardBackground};\n  transition: border-color 0.3s;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.inputFocus};\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.buttonText};\n  font-size: 16px;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s, transform 0.2s;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary};\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nexport const Span = styled.span``;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operation';\nimport {\n  Container,\n  ContainerBox,\n  Form,\n  Input,\n  Button,\n  Title,\n  Span,\n  ErrorMessage,\n} from '../LoginForm/LoginForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const form = e.currentTarget;\n\n    try {\n      const response = await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n\n      if (!response || response.error) {\n        throw new Error(response?.error?.message || 'Registration failed');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <Title>Register</Title>\n      <Form onSubmit={handleSubmit}>\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ContainerBox>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n          />\n        </ContainerBox>\n        <ContainerBox>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            title=\"Please enter a valid email address.\"\n            required\n          />\n        </ContainerBox>\n        <ContainerBox>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            title=\"The password must contain only Latin letters, numbers, and special characters.\"\n            required\n          />\n        </ContainerBox>\n\n        <Button type=\"submit\">\n          <Span></Span>\n          <Span></Span>\n          <Span></Span>\n          <Span></Span>\n          Register\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","_ref","theme","colors","cardBackground","ContainerBox","_templateObject3","ErrorMessage","_templateObject4","_ref2","error","Title","_templateObject5","_ref3","primary","Input","_templateObject6","_ref4","text","_ref5","inputBorder","_ref6","_ref7","inputFocus","Button","_templateObject7","_ref8","_ref9","buttonText","_ref10","secondary","Span","_templateObject8","RegisterForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setError","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","e","form","response","_response$error","_context","prev","next","preventDefault","currentTarget","register","name","elements","value","email","password","unwrap","sent","Error","message","t0","reset","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","type","placeholder","title","required","Register","Helmet"],"sourceRoot":""}